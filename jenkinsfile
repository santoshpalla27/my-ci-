
pipeline {
    agent any

    environment {
        IMAGE_NAME = 'tomcat' // Replace with your Docker image name
        CONTAINER_NAME = 'tomcat-server' // Replace with your container name
    }

    stages {
        stage('Poll SCM') {
            steps {
                git branch: 'main', url: 'https://github.com/santoshpalla27/my-ci-.git'
            }
        }
        stage('sonar analysis') {
            steps {
                sh ''' mvn sonar:sonar \
                      -Dsonar.host.url=http://18.209.65.142:9000/ \
                      -Dsonar.login=squ_f14b48c6af42c66f4302e1b962b97e4463d77d8d '''
            }
        }
        stage('mvn build') {
            steps {
                sh "mvn clean install "
            }
        }
        stage('Deploy WAR to Tomcat') {
            steps {
                deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://18.209.65.142:8082/')], contextPath: 'webapp', war: '**/*.war'
            }
        }
        stage('mvn deploy to nexus') {
            steps {
                sh "mvn clean deploy "
            }
        }
        stage('Cleanup Old Containers') {
            steps {
                sh "docker rm -f ${CONTAINER_NAME} || true"
            }
        }
        stage('Cleanup Old Images') {
            steps {
                sh "docker rmi -f \$(docker images -q --filter 'dangling=true') || true"
                sh "docker rmi -f \$(docker images -q ${IMAGE_NAME}) || true"
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME} -f Dockerfile ."
            }
        }
        stage('Scan Docker Image and Repository') {
            steps {
                sh "trivy image ${IMAGE_NAME}"
                sh "trivy fs ."
            }
        }
        stage('Run New Container') {
            steps {
                sh "docker run -d --name ${CONTAINER_NAME} -p 80:8080 ${IMAGE_NAME}"
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
